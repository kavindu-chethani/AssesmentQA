"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const api_base_1 = __importDefault(require("../api-base"));
const async_event_emitter_1 = __importDefault(require("../../utils/async-event-emitter"));
const PROXYLESS_STORAGE_BINDING = 'PROXYLESS_STORAGE_BINDING';
class SessionStorage extends api_base_1.default {
    constructor(browserId, client) {
        super(browserId, client);
        this._eventEmitter = new async_event_emitter_1.default();
        if (this._browserConnection.messageBus)
            this._addTestRunEventListeners(this._browserConnection.messageBus);
        this._browserConnection.on('message-bus-initialized', messageBus => {
            this._addTestRunEventListeners(messageBus);
        });
    }
    _addTestRunEventListeners(messageBus) {
        messageBus.on('test-run-done', testRun => {
            this._eventEmitter.emit('contextStorageTestRunDone', { testRunId: testRun.id });
        });
    }
    on(eventName, listener) {
        return this._eventEmitter.on(eventName, listener);
    }
    async init() {
        await this._client.Runtime.addBinding({ name: PROXYLESS_STORAGE_BINDING });
        await this._client.Runtime.on('bindingCalled', (event) => {
            if (event.name === PROXYLESS_STORAGE_BINDING) {
                const { testRunId, frameDriverId, data } = JSON.parse(event.payload);
                this._eventEmitter.emit('contextStorageSync', { sessionStorage: data, testRunId, frameDriverId });
            }
        });
    }
}
exports.default = SessionStorage;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJveHlsZXNzL3Nlc3Npb24tc3RvcmFnZS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUVBLDJEQUEyQztBQUUzQywwRkFBZ0U7QUFJaEUsTUFBTSx5QkFBeUIsR0FBRywyQkFBMkIsQ0FBQztBQUU5RCxNQUFxQixjQUFlLFNBQVEsa0JBQWdCO0lBR3hELFlBQWEsU0FBaUIsRUFBRSxNQUFtQjtRQUMvQyxLQUFLLENBQUMsU0FBUyxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBRXpCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSw2QkFBaUIsRUFBRSxDQUFDO1FBRTdDLElBQUksSUFBSSxDQUFDLGtCQUFrQixDQUFDLFVBQVU7WUFDbEMsSUFBSSxDQUFDLHlCQUF5QixDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUV2RSxJQUFJLENBQUMsa0JBQWtCLENBQUMsRUFBRSxDQUFDLHlCQUF5QixFQUFFLFVBQVUsQ0FBQyxFQUFFO1lBQy9ELElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUMvQyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFTyx5QkFBeUIsQ0FBRSxVQUFzQjtRQUNyRCxVQUFVLENBQUMsRUFBRSxDQUFDLGVBQWUsRUFBRSxPQUFPLENBQUMsRUFBRTtZQUNyQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQywyQkFBMkIsRUFBRSxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNwRixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFTSxFQUFFLENBQUUsU0FBaUIsRUFBRSxRQUFrQztRQUM1RCxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBRU0sS0FBSyxDQUFDLElBQUk7UUFDYixNQUFNLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxFQUFFLElBQUksRUFBRSx5QkFBeUIsRUFBRSxDQUFDLENBQUM7UUFFM0UsTUFBTSxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsZUFBZSxFQUFFLENBQUMsS0FBeUIsRUFBRSxFQUFFO1lBQ3pFLElBQUksS0FBSyxDQUFDLElBQUksS0FBSyx5QkFBeUIsRUFBRTtnQkFDMUMsTUFBTSxFQUFFLFNBQVMsRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7Z0JBRXJFLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLG9CQUFvQixFQUFFLEVBQUUsY0FBYyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsYUFBYSxFQUFFLENBQUMsQ0FBQzthQUNyRztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztDQUNKO0FBckNELGlDQXFDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb3RvY29sQXBpIH0gZnJvbSAnY2hyb21lLXJlbW90ZS1pbnRlcmZhY2UnO1xuaW1wb3J0IFByb3RvY29sIGZyb20gJ2RldnRvb2xzLXByb3RvY29sJztcbmltcG9ydCBQcm94eWxlc3NBcGlCYXNlIGZyb20gJy4uL2FwaS1iYXNlJztcbmltcG9ydCBCaW5kaW5nQ2FsbGVkRXZlbnQgPSBQcm90b2NvbC5SdW50aW1lLkJpbmRpbmdDYWxsZWRFdmVudDtcbmltcG9ydCBBc3luY0V2ZW50RW1pdHRlciBmcm9tICcuLi8uLi91dGlscy9hc3luYy1ldmVudC1lbWl0dGVyJztcbmltcG9ydCBFbWl0dGVyeSBmcm9tICdlbWl0dGVyeSc7XG5pbXBvcnQgTWVzc2FnZUJ1cyBmcm9tICcuLi8uLi91dGlscy9tZXNzYWdlLWJ1cyc7XG5cbmNvbnN0IFBST1hZTEVTU19TVE9SQUdFX0JJTkRJTkcgPSAnUFJPWFlMRVNTX1NUT1JBR0VfQklORElORyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlc3Npb25TdG9yYWdlIGV4dGVuZHMgUHJveHlsZXNzQXBpQmFzZSB7XG4gICAgcHJpdmF0ZSBfZXZlbnRFbWl0dGVyOiBBc3luY0V2ZW50RW1pdHRlcjtcblxuICAgIGNvbnN0cnVjdG9yIChicm93c2VySWQ6IHN0cmluZywgY2xpZW50OiBQcm90b2NvbEFwaSkge1xuICAgICAgICBzdXBlcihicm93c2VySWQsIGNsaWVudCk7XG5cbiAgICAgICAgdGhpcy5fZXZlbnRFbWl0dGVyID0gbmV3IEFzeW5jRXZlbnRFbWl0dGVyKCk7XG5cbiAgICAgICAgaWYgKHRoaXMuX2Jyb3dzZXJDb25uZWN0aW9uLm1lc3NhZ2VCdXMpXG4gICAgICAgICAgICB0aGlzLl9hZGRUZXN0UnVuRXZlbnRMaXN0ZW5lcnModGhpcy5fYnJvd3NlckNvbm5lY3Rpb24ubWVzc2FnZUJ1cyk7XG5cbiAgICAgICAgdGhpcy5fYnJvd3NlckNvbm5lY3Rpb24ub24oJ21lc3NhZ2UtYnVzLWluaXRpYWxpemVkJywgbWVzc2FnZUJ1cyA9PiB7XG4gICAgICAgICAgICB0aGlzLl9hZGRUZXN0UnVuRXZlbnRMaXN0ZW5lcnMobWVzc2FnZUJ1cyk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHByaXZhdGUgX2FkZFRlc3RSdW5FdmVudExpc3RlbmVycyAobWVzc2FnZUJ1czogTWVzc2FnZUJ1cyk6IHZvaWQge1xuICAgICAgICBtZXNzYWdlQnVzLm9uKCd0ZXN0LXJ1bi1kb25lJywgdGVzdFJ1biA9PiB7XG4gICAgICAgICAgICB0aGlzLl9ldmVudEVtaXR0ZXIuZW1pdCgnY29udGV4dFN0b3JhZ2VUZXN0UnVuRG9uZScsIHsgdGVzdFJ1bklkOiB0ZXN0UnVuLmlkIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBwdWJsaWMgb24gKGV2ZW50TmFtZTogc3RyaW5nLCBsaXN0ZW5lcjogKGV2ZW50RGF0YT86IGFueSkgPT4gYW55KTogRW1pdHRlcnkuVW5zdWJzY3JpYmVGbiB7XG4gICAgICAgIHJldHVybiB0aGlzLl9ldmVudEVtaXR0ZXIub24oZXZlbnROYW1lLCBsaXN0ZW5lcik7XG4gICAgfVxuXG4gICAgcHVibGljIGFzeW5jIGluaXQgKCk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICBhd2FpdCB0aGlzLl9jbGllbnQuUnVudGltZS5hZGRCaW5kaW5nKHsgbmFtZTogUFJPWFlMRVNTX1NUT1JBR0VfQklORElORyB9KTtcblxuICAgICAgICBhd2FpdCB0aGlzLl9jbGllbnQuUnVudGltZS5vbignYmluZGluZ0NhbGxlZCcsIChldmVudDogQmluZGluZ0NhbGxlZEV2ZW50KSA9PiB7XG4gICAgICAgICAgICBpZiAoZXZlbnQubmFtZSA9PT0gUFJPWFlMRVNTX1NUT1JBR0VfQklORElORykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgdGVzdFJ1bklkLCBmcmFtZURyaXZlcklkLCBkYXRhIH0gPSBKU09OLnBhcnNlKGV2ZW50LnBheWxvYWQpO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5fZXZlbnRFbWl0dGVyLmVtaXQoJ2NvbnRleHRTdG9yYWdlU3luYycsIHsgc2Vzc2lvblN0b3JhZ2U6IGRhdGEsIHRlc3RSdW5JZCwgZnJhbWVEcml2ZXJJZCB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl19
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isIPCResponsePacket = exports.isIPCErrorResponse = exports.isTestCafeErrorList = exports.IPCTransportEvents = exports.IPCPacketType = void 0;
const error_list_1 = __importDefault(require("../../../errors/error-list"));
var IPCPacketType;
(function (IPCPacketType) {
    IPCPacketType[IPCPacketType["request"] = 0] = "request";
    IPCPacketType[IPCPacketType["response"] = 1] = "response";
})(IPCPacketType = exports.IPCPacketType || (exports.IPCPacketType = {}));
var IPCTransportEvents;
(function (IPCTransportEvents) {
    IPCTransportEvents["data"] = "data";
})(IPCTransportEvents = exports.IPCTransportEvents || (exports.IPCTransportEvents = {}));
function isTestCafeErrorList(err) {
    return err.name === error_list_1.default.name;
}
exports.isTestCafeErrorList = isTestCafeErrorList;
function isIPCErrorResponse(response) {
    return !!response.error;
}
exports.isIPCErrorResponse = isIPCErrorResponse;
function isIPCResponsePacket(message) {
    return ['id', 'type', 'sync', 'data'].every(prop => prop in message);
}
exports.isIPCResponsePacket = isIPCResponsePacket;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9zZXJ2aWNlcy91dGlscy9pcGMvaW50ZXJmYWNlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFFQSw0RUFBMkQ7QUFLM0QsSUFBWSxhQUdYO0FBSEQsV0FBWSxhQUFhO0lBQ3JCLHVEQUFPLENBQUE7SUFDUCx5REFBUSxDQUFBO0FBQ1osQ0FBQyxFQUhXLGFBQWEsR0FBYixxQkFBYSxLQUFiLHFCQUFhLFFBR3hCO0FBOEJELElBQVksa0JBRVg7QUFGRCxXQUFZLGtCQUFrQjtJQUMxQixtQ0FBYSxDQUFBO0FBQ2pCLENBQUMsRUFGVyxrQkFBa0IsR0FBbEIsMEJBQWtCLEtBQWxCLDBCQUFrQixRQUU3QjtBQVlELFNBQWdCLG1CQUFtQixDQUFFLEdBQWtCO0lBQ25ELE9BQVEsR0FBeUIsQ0FBQyxJQUFJLEtBQUssb0JBQWlCLENBQUMsSUFBSSxDQUFDO0FBQ3RFLENBQUM7QUFGRCxrREFFQztBQUVELFNBQWdCLGtCQUFrQixDQUFFLFFBQWtEO0lBQ2xGLE9BQU8sQ0FBQyxDQUFFLFFBQTZCLENBQUMsS0FBSyxDQUFDO0FBQ2xELENBQUM7QUFGRCxnREFFQztBQUVELFNBQWdCLG1CQUFtQixDQUFFLE9BQWU7SUFDaEQsT0FBTyxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksSUFBSSxPQUFPLENBQUMsQ0FBQztBQUN6RSxDQUFDO0FBRkQsa0RBRUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBVbnN1YnNjcmliZUZuIH0gZnJvbSAnZW1pdHRlcnknO1xuaW1wb3J0IEV2ZW50RW1pdHRlciBmcm9tICcuLi8uLi8uLi91dGlscy9hc3luYy1ldmVudC1lbWl0dGVyJztcbmltcG9ydCBUZXN0Q2FmZUVycm9yTGlzdCBmcm9tICcuLi8uLi8uLi9lcnJvcnMvZXJyb3ItbGlzdCc7XG5cblxuZXhwb3J0IHR5cGUgRXh0ZXJuYWxFcnJvciA9IEVycm9yIHwgVGVzdENhZmVFcnJvckxpc3Q7XG5cbmV4cG9ydCBlbnVtIElQQ1BhY2tldFR5cGUge1xuICAgIHJlcXVlc3QsXG4gICAgcmVzcG9uc2Vcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJUENQYWNrZXQge1xuICAgIGlkOiBudW1iZXI7XG4gICAgdHlwZTogSVBDUGFja2V0VHlwZTtcbiAgICBzeW5jOiBib29sZWFuO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElQQ1JlcXVlc3REYXRhIHtcbiAgICBuYW1lOiBzdHJpbmc7XG5cbiAgICBhcmdzOiBhbnlbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJUENSZXF1ZXN0UGFja2V0IGV4dGVuZHMgSVBDUGFja2V0IHtcbiAgICBkYXRhOiBJUENSZXF1ZXN0RGF0YTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJUENTdWNjZXNzZnVsUmVzcG9uc2Uge1xuICAgIHJlc3VsdDogYW55O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElQQ0Vycm9yUmVzcG9uc2Uge1xuICAgIGVycm9yOiBFeHRlcm5hbEVycm9yO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElQQ1Jlc3BvbnNlUGFja2V0IGV4dGVuZHMgSVBDUGFja2V0IHtcbiAgICBkYXRhOiBJUENTdWNjZXNzZnVsUmVzcG9uc2UgfCBJUENFcnJvclJlc3BvbnNlO1xufVxuXG5leHBvcnQgZW51bSBJUENUcmFuc3BvcnRFdmVudHMge1xuICAgIGRhdGEgPSAnZGF0YSdcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJUENUcmFuc3BvcnQgZXh0ZW5kcyBFdmVudEVtaXR0ZXIge1xuICAgIG9uKGV2ZW50OiBJUENUcmFuc3BvcnRFdmVudHMuZGF0YSwgaGFuZGxlcjogKGRhdGE6IElQQ1BhY2tldCkgPT4gUHJvbWlzZTx2b2lkPik6IFVuc3Vic2NyaWJlRm47XG5cbiAgICByZWFkKCk6IHZvaWQ7XG4gICAgd3JpdGUocGFja2V0OiBJUENQYWNrZXQpOiBQcm9taXNlPHZvaWQ+O1xuXG4gICAgcmVhZFN5bmMoKTogSVBDUmVzcG9uc2VQYWNrZXQ7XG4gICAgd3JpdGVTeW5jKHBhY2tldDogSVBDUGFja2V0KTogdm9pZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzVGVzdENhZmVFcnJvckxpc3QgKGVycjogRXh0ZXJuYWxFcnJvcik6IGVyciBpcyBUZXN0Q2FmZUVycm9yTGlzdCB7XG4gICAgcmV0dXJuIChlcnIgYXMgVGVzdENhZmVFcnJvckxpc3QpLm5hbWUgPT09IFRlc3RDYWZlRXJyb3JMaXN0Lm5hbWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0lQQ0Vycm9yUmVzcG9uc2UgKHJlc3BvbnNlOiBJUENTdWNjZXNzZnVsUmVzcG9uc2UgfCBJUENFcnJvclJlc3BvbnNlKTogcmVzcG9uc2UgaXMgSVBDRXJyb3JSZXNwb25zZSB7XG4gICAgcmV0dXJuICEhKHJlc3BvbnNlIGFzIElQQ0Vycm9yUmVzcG9uc2UpLmVycm9yO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNJUENSZXNwb25zZVBhY2tldCAobWVzc2FnZTogb2JqZWN0KTogbWVzc2FnZSBpcyBJUENSZXNwb25zZVBhY2tldCB7XG4gICAgcmV0dXJuIFsnaWQnLCAndHlwZScsICdzeW5jJywgJ2RhdGEnXS5ldmVyeShwcm9wID0+IHByb3AgaW4gbWVzc2FnZSk7XG59XG4iXX0=